{"ast":null,"code":"// reducer.js\n// a reducer receives the current state, and an action\nexport const reducer = (state, action) => {\n  // we check the type of each action and return an updated state object accordingly\n  switch (action.type) {\n    case REQUEST_STARTED:\n      return { ...state,\n        isLoading: true\n      };\n\n    case REQUEST_SUCCESSFUL:\n      return { ...state,\n        isLoading: false,\n        error: null,\n        data: action.data\n      };\n\n    case REQUEST_FAILED:\n      return { ...state,\n        isLoading: false,\n        error: action.error\n      };\n    // usually I ignore the action if its `type` is not matched here, some people prefer throwing errors here - it's really up to you.\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/src/reducer.js"],"names":["reducer","state","action","type","REQUEST_STARTED","isLoading","REQUEST_SUCCESSFUL","error","data","REQUEST_FAILED"],"mappings":"AAAA;AAEA;AACA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,eAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKC,kBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELI,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,IAAI,EAAEN,MAAM,CAACM;AAJR,OAAP;;AAMF,SAAKC,cAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELI,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,KAAK,EAAEL,MAAM,CAACK;AAHT,OAAP;AAMF;;AACA;AACE,aAAON,KAAP;AAtBJ;AAwBD,CA1BM","sourcesContent":["// reducer.js\n\n// a reducer receives the current state, and an action\nexport const reducer = (state, action) => {\n  // we check the type of each action and return an updated state object accordingly\n  switch (action.type) {\n    case REQUEST_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case REQUEST_SUCCESSFUL:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        data: action.data,\n      };\n    case REQUEST_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n      };\n\n    // usually I ignore the action if its `type` is not matched here, some people prefer throwing errors here - it's really up to you.\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}