{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_.._Observable PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../../Observable';\nexport function fromFetch(input, init) {\n  return new Observable(function (subscriber) {\n    var controller = new AbortController();\n    var signal = controller.signal;\n    var outerSignalHandler;\n    var abortable = true;\n    var unsubscribed = false;\n\n    if (init) {\n      if (init.signal) {\n        if (init.signal.aborted) {\n          controller.abort();\n        } else {\n          outerSignalHandler = function () {\n            if (!signal.aborted) {\n              controller.abort();\n            }\n          };\n\n          init.signal.addEventListener('abort', outerSignalHandler);\n        }\n      }\n\n      init = tslib_1.__assign({}, init, {\n        signal: signal\n      });\n    } else {\n      init = {\n        signal: signal\n      };\n    }\n\n    fetch(input, init).then(function (response) {\n      abortable = false;\n      subscriber.next(response);\n      subscriber.complete();\n    }).catch(function (err) {\n      abortable = false;\n\n      if (!unsubscribed) {\n        subscriber.error(err);\n      }\n    });\n    return function () {\n      unsubscribed = true;\n\n      if (abortable) {\n        controller.abort();\n      }\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/observable/dom/fetch.ts"],"names":[],"mappings":";AAAA,OAAO,KAAE,OAAT,MAAqB,OAArB;AAoDA,SAAM,UAAN,QAA0B,kBAA1B;AACE,OAAA,SAAW,SAAX,CAAgC,KAAhC,EAAgC,IAAhC,EAAgC;AAC9B,SAAA,IAAM,UAAN,CAAmB,UAAI,UAAJ,EAAsB;AACzC,QAAM,UAAS,GAAA,IAAA,eAAA,EAAf;AACA,QAAI,MAAA,GAAA,UAA+B,CAAA,MAAnC;AACA,QAAI,kBAAJ;AACA,QAAI,SAAA,GAAY,IAAhB;AAEA,QAAI,YAAM,GAAA,KAAV;;QAEE,I,EAAI;UACF,IAAI,CAAA,M,EAAK;YACP,IAAA,CAAA,MAAA,CAAW,O,EAAQ;AACpB,UAAA,UAAA,CAAA,KAAA;AAAM,S,MACL;AACE,UAAA,kBAAY,GAAA,YAAS;gBACnB,CAAA,MAAA,CAAA,O,EAAgB;AACjB,cAAA,UAAA,CAAA,KAAA;AACD;AACF,WAJE;;AAKH,UAAA,IAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,kBAAA;AACF;AACD;;AACD,MAAA,IAAA,GAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA;AAAM,K,MACL;AACD,MAAA,IAAA,GAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA;AAED;;AACE,IAAA,KAAA,CAAA,KAAA,EAAS,IAAT,CAAA,CAAY,IAAZ,CAAkB,UAAA,QAAA,EAAA;AAClB,MAAA,SAAA,GAAW,KAAX;AACA,MAAA,UAAU,CAAC,IAAX,CAAW,QAAX;AACC,MAAA,UAAM,CAAA,QAAN;KAHD,EAIA,KAJA,CAIA,UAAY,GAAZ,EAAkB;AAClB,MAAA,SAAK,GAAA,KAAL;;UAEE,CAAA,Y,EAAW;AACZ,QAAA,UAAA,CAAA,KAAA,CAAA,GAAA;AACA;AAEH,KAXE;AAYA,WAAA,YAAe;AACf,MAAA,YAAI,GAAW,IAAf;;UACE,S,EAAW;AACZ,QAAA,UAAA,CAAA,KAAA;AACD;AACD,KALC;AAML,GA5CG,CAAA","sourcesContent":["/** PURE_IMPORTS_START tslib,_.._Observable PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../../Observable';\nexport function fromFetch(input, init) {\n    return new Observable(function (subscriber) {\n        var controller = new AbortController();\n        var signal = controller.signal;\n        var outerSignalHandler;\n        var abortable = true;\n        var unsubscribed = false;\n        if (init) {\n            if (init.signal) {\n                if (init.signal.aborted) {\n                    controller.abort();\n                }\n                else {\n                    outerSignalHandler = function () {\n                        if (!signal.aborted) {\n                            controller.abort();\n                        }\n                    };\n                    init.signal.addEventListener('abort', outerSignalHandler);\n                }\n            }\n            init = tslib_1.__assign({}, init, { signal: signal });\n        }\n        else {\n            init = { signal: signal };\n        }\n        fetch(input, init).then(function (response) {\n            abortable = false;\n            subscriber.next(response);\n            subscriber.complete();\n        }).catch(function (err) {\n            abortable = false;\n            if (!unsubscribed) {\n                subscriber.error(err);\n            }\n        });\n        return function () {\n            unsubscribed = true;\n            if (abortable) {\n                controller.abort();\n            }\n        };\n    });\n}\n//# sourceMappingURL=fetch.js.map\n"]},"metadata":{},"sourceType":"module"}