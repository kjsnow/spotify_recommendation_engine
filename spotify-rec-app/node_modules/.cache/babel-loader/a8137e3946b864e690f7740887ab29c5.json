{"ast":null,"code":"var _jsxFileName = \"/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/src/Analyze.js\";\nimport React, { useEffect, useState, handleChange, useReducer } from \"react\";\nimport logo from \"./images/logo.svg\";\nimport search_icon from \"./images/search-icon.png\";\nimport { requestStarted, requestSuccessful, requestFailed } from \"./actions.js\";\nimport { reducer } from \"./reducer.js\";\nimport useSWR from 'swr'; // STORE\n// import { store } from 'react-recollect';\n//\n// const storedData = JSON.parse(localStorage.getItem('store'));\n// store.searchResults = storedData\n//   ? storedData.searchResults\n//   : {\n//     name: null,\n//     followers: null,\n//     genres: null,\n//   };\n\nfunction Artist(props) {\n  var _currentResult$data;\n\n  const currentResult = props.currentResult; // ATTEMPTING TO REPLACE WITH STORE\n  //const currentResult = store.searchResults\n\n  if ((_currentResult$data = currentResult.data) === null || _currentResult$data === void 0 ? void 0 : _currentResult$data.name) {\n    const genres = currentResult.data.genres.map((genre, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, \" \", genre, \" \"));\n    const image_url = currentResult.data.images[0].url; // const images = currentResult.images.map((image, index) =>\n    //   <p key={index}> {image} </p>\n    // )\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Artist Name: \", currentResult.data.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Followers: \", currentResult.data.followers), genres, /*#__PURE__*/React.createElement(\"img\", {\n      src: image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"No artist entered.\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nfunction Analyze() {\n  const [currentSearch, setSearch] = useState(\"\"); //const [currentResult, setResult] = useState({});\n\n  const [currentResult, dispatch] = useReducer(reducer, {\n    isLoading: true,\n    data: null,\n    error: null\n  });\n\n  const handleChange = event => {\n    const search = event.target.value;\n    setSearch(search);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchArtist = async () => {\n      dispatch(requestStarted());\n\n      try {\n        fetch(\"/api/analyze?artist=\" + currentSearch, {\n          signal: abortController.signal\n        }).then(res => res.json()).then(data => {\n          dispatch(requestSuccessful({\n            data\n          }));\n        });\n      } catch (e) {\n        // Only throw error when the fetch was not aborted\n        if (!abortController.signal.aborted) {\n          //console.error(e);\n          dispatch(requestFailed({\n            error: e.message\n          }));\n        }\n      }\n    };\n\n    fetchArtist();\n    return () => {\n      abortController.abort();\n    };\n  }, [currentSearch]); // ATTEMPTING TO REPLACE WITH STORE...\n  // const fetchArtist = () => {\n  //   fetch('/api/analyze?artist='+currentSearch)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //     store.searchResults = data;\n  //     })\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"analyze\",\n    className: \"page-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"search-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"bg-white text-purple-700 focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\",\n    type: \"search\",\n    id: \"artist-search\",\n    placeholder: \"Search Artist\",\n    src: \"search_icon\",\n    value: currentSearch,\n    autoComplete: \"off\",\n    spellCheck: \"false\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Artist, {\n    currentResult: currentResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Analyze;","map":{"version":3,"sources":["/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/src/Analyze.js"],"names":["React","useEffect","useState","handleChange","useReducer","search_icon","requestStarted","requestSuccessful","requestFailed","reducer","useSWR","Artist","props","currentResult","data","name","genres","map","genre","index","image_url","images","url","followers","logo","Analyze","currentSearch","setSearch","dispatch","isLoading","error","event","search","target","value","abortController","AbortController","fetchArtist","fetch","signal","then","res","json","e","aborted","message","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, handleChange, useReducer } from \"react\";\nimport logo from \"./images/logo.svg\";\nimport search_icon from \"./images/search-icon.png\";\nimport { requestStarted, requestSuccessful, requestFailed } from \"./actions.js\";\nimport { reducer } from \"./reducer.js\";\n\nimport useSWR from 'swr'\n\n// STORE\n// import { store } from 'react-recollect';\n//\n// const storedData = JSON.parse(localStorage.getItem('store'));\n// store.searchResults = storedData\n//   ? storedData.searchResults\n//   : {\n//     name: null,\n//     followers: null,\n//     genres: null,\n//   };\n\nfunction Artist(props) {\n  const currentResult = props.currentResult;\n\n  // ATTEMPTING TO REPLACE WITH STORE\n  //const currentResult = store.searchResults\n\n  if (currentResult.data?.name) {\n    const genres = currentResult.data.genres.map((genre, index) => (\n      <p key={index}> {genre} </p>\n    ));\n\n    const image_url = currentResult.data.images[0].url;\n\n    // const images = currentResult.images.map((image, index) =>\n    //   <p key={index}> {image} </p>\n    // )\n\n    return (\n      <div>\n        <p>Artist Name: {currentResult.data.name}</p>\n        <p>Followers: {currentResult.data.followers}</p>\n        {genres}\n        <img src={image_url} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <p>No artist entered.</p>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </div>\n    );\n  }\n}\n\nfunction Analyze() {\n  const [currentSearch, setSearch] = useState(\"\");\n  //const [currentResult, setResult] = useState({});\n  const [currentResult, dispatch] = useReducer(reducer, {\n    isLoading: true,\n    data: null,\n    error: null,\n  });\n\n  const handleChange = (event) => {\n    const search = event.target.value;\n    setSearch(search);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchArtist = async () => {\n      dispatch(requestStarted());\n\n      try {\n        fetch(\"/api/analyze?artist=\" + currentSearch, {\n          signal: abortController.signal,\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            dispatch(requestSuccessful({ data }));\n          });\n      } catch (e) {\n        // Only throw error when the fetch was not aborted\n        if (!abortController.signal.aborted) {\n          //console.error(e);\n          dispatch(requestFailed({ error: e.message }));\n        }\n      }\n    };\n\n    fetchArtist();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [currentSearch]);\n\n  // ATTEMPTING TO REPLACE WITH STORE...\n  // const fetchArtist = () => {\n  //   fetch('/api/analyze?artist='+currentSearch)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //     store.searchResults = data;\n  //     })\n  // }\n\n  return (\n    <div id=\"analyze\" className=\"page-body\">\n      <span className=\"search-span\">\n        <input\n          className=\"bg-white text-purple-700 focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\"\n          type=\"search\"\n          id=\"artist-search\"\n          placeholder=\"Search Artist\"\n          src={\"search_icon\"}\n          value={currentSearch}\n          autoComplete=\"off\"\n          spellCheck=\"false\"\n          onChange={handleChange}\n        />\n\n        {/*<input*/}\n        {/*  type=\"search\"*/}\n        {/*  className=\"search-box\"*/}\n        {/*  id=\"artist-search\"*/}\n        {/*  src={\"search_icon\"}*/}\n        {/*  placeholder=\"Search Artist\"*/}\n        {/*  value={currentSearch}*/}\n        {/*  autoComplete=\"off\"*/}\n        {/*  spellCheck=\"false\"*/}\n        {/*  onChange={handleChange}*/}\n        {/*/>*/}\n      </span>\n      <Artist currentResult={currentResult} />\n    </div>\n  );\n}\n\nexport default Analyze;\n"]},"metadata":{},"sourceType":"module"}