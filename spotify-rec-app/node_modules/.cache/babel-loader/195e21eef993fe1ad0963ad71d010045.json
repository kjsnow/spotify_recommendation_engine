{"ast":null,"code":"var _jsxFileName = \"/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/src/Analyze.js\";\nimport React, { useEffect, useState, handleChange } from \"react\";\nimport logo from \"./logo.svg\";\nimport search_icon from \"./search-icon.png\"; // STORE\n// import { store } from 'react-recollect';\n//\n// const storedData = JSON.parse(localStorage.getItem('store'));\n// store.searchResults = storedData\n//   ? storedData.searchResults\n//   : {\n//     name: null,\n//     followers: null,\n//     genres: null,\n//   };\n\nfunction Artist(props) {\n  const currentResult = props.currentResult; // ATTEMPTING TO REPLACE WITH STORE\n  //const currentResult = store.searchResults\n\n  if (currentResult === null || currentResult === void 0 ? void 0 : currentResult.name) {\n    console.log(currentResult.name);\n    console.log(currentResult.genres); // var jsonGenres = JSON.parse(currentResult.genres);\n    // for (var i = 0; i < jsonGenres.genres.length; i++) {\n    //     var genre = jsonGenres.genres[i];\n    //     console.log(genre);\n    // }\n\n    const genres = currentResult.genres.map((genre, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, \" \", genre, \" \"));\n    const image_url = currentResult.images[0].url; // const images = currentResult.images.map((image, index) =>\n    //   <p key={index}> {image} </p>\n    // )\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Artist Name: \", currentResult.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Followers: \", currentResult.followers), genres, /*#__PURE__*/React.createElement(\"img\", {\n      src: image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"No artist entered.\");\n  }\n}\n\nfunction Analyze() {\n  const [currentSearch, setSearch] = useState(''); // IS NOT CURRENTLY USED -> HANDLE CHANGE IS, CAN I CHANGE THAT?\n\n  useEffect(() => {\n    // function handleChange(e) {\n    //   const search = e.target.value\n    //   setSearch(search)\n    // }\n    console.log(currentSearch); //fetchArtist()\n  }, []);\n  const [currentResult, setResult] = useState(null); // WORKS!!!\n\n  const fetchArtist = () => {\n    fetch('/api/analyze?artist=' + currentSearch).then(res => res.json()).then(data => {\n      setResult({\n        name: data.name,\n        followers: data.followers,\n        genres: data.genres,\n        images: data.images\n      });\n    });\n  }; // ATTEMPTING TO REPLACE WITH STORE...\n  // const fetchArtist = () => {\n  //   fetch('/api/analyze?artist='+currentSearch)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //     store.searchResults = data;\n  //     })\n  // }\n  // function handleSubmit(search) {\n  //   if (search !== '') {\n  //     fetchArtist()\n  //   }\n  // }\n  // function handleChange(e) {\n  //   const search = e.target.value\n  //   setSearch(search)\n  //   //setSearch(search, handleSubmit(search))\n  //\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"analyze\",\n    className: \"page-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"search-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"search-box\",\n    id: \"artist-search\",\n    src: \"search_icon\",\n    placeholder: \"Search Artist\",\n    autoComplete: \"off\",\n    spellCheck: \"false\",\n    onChange: setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 14\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Learn React\"), /*#__PURE__*/React.createElement(Artist, {\n    currentResult: currentResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nexport default Analyze;","map":{"version":3,"sources":["/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/src/Analyze.js"],"names":["React","useEffect","useState","handleChange","search_icon","Artist","props","currentResult","name","console","log","genres","map","genre","index","image_url","images","url","followers","Analyze","currentSearch","setSearch","setResult","fetchArtist","fetch","then","res","json","data","e","target","value","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,YAArC,QAAyD,OAAzD;;AAEA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAMC,aAAa,GAAGD,KAAK,CAACC,aAA5B,CADqB,CAGrB;AACA;;AAEA,MAAIA,aAAJ,aAAIA,aAAJ,uBAAIA,aAAa,CAAEC,IAAnB,EAAyB;AAEvBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACC,IAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACI,MAA1B,EAHuB,CAIvB;AACA;AACA;AACA;AACA;;AAEA,UAAMA,MAAM,GAAGJ,aAAa,CAACI,MAAd,CAAqBC,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,kBACtC;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBD,KAAjB,MADa,CAAf;AAIA,UAAME,SAAS,GAAGR,aAAa,CAACS,MAAd,CAAqB,CAArB,EAAwBC,GAA1C,CAduB,CAgBvB;AACA;AACA;;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBV,aAAa,CAACC,IAA/B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAeD,aAAa,CAACW,SAA7B,CAFF,EAGGP,MAHH,eAIE;AAAK,MAAA,GAAG,EAAEI,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASD,GA7BD,MA6BO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF;AAGD;AACF;;AAGD,SAASI,OAAT,GAAmB;AACjB,QAAM,CAACC,aAAD,EAAgBC,SAAhB,IAA6BnB,QAAQ,CAAC,EAAD,CAA3C,CADiB,CAGjB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYU,aAAZ,EALc,CAMd;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAM,CAACb,aAAD,EAAgBe,SAAhB,IAA6BpB,QAAQ,CAAC,IAAD,CAA3C,CAbiB,CAgBjB;;AACA,QAAMqB,WAAW,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,yBAAuBJ,aAAxB,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACdN,MAAAA,SAAS,CAAC;AACRd,QAAAA,IAAI,EAAEoB,IAAI,CAACpB,IADH;AAERU,QAAAA,SAAS,EAAEU,IAAI,CAACV,SAFR;AAGRP,QAAAA,MAAM,EAAEiB,IAAI,CAACjB,MAHL;AAIRK,QAAAA,MAAM,EAAEY,IAAI,CAACZ;AAJL,OAAD,CAAT;AAMC,KATH;AAUD,GAXD,CAjBiB,CA8BjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,SAAS,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AACO,IAAA,SAAS,EAAC,YADjB;AAEO,IAAA,EAAE,EAAC,eAFV;AAGO,IAAA,GAAG,EAAE,aAHZ;AAIO,IAAA,WAAW,EAAC,eAJnB;AAKO,IAAA,YAAY,EAAC,KALpB;AAMO,IAAA,UAAU,EAAC,OANlB;AAOO,IAAA,QAAQ,EAAEK,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAYE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAbF,eAgBE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBF,eAwBE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEzB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AA4BD;;AAAA;AAGD,eAAeY,OAAf","sourcesContent":["import React, { useEffect, useState, handleChange } from \"react\";\nimport logo from \"./logo.svg\";\nimport search_icon from \"./search-icon.png\";\n\n// STORE\n// import { store } from 'react-recollect';\n//\n// const storedData = JSON.parse(localStorage.getItem('store'));\n// store.searchResults = storedData\n//   ? storedData.searchResults\n//   : {\n//     name: null,\n//     followers: null,\n//     genres: null,\n//   };\n\nfunction Artist(props) {\n  const currentResult = props.currentResult\n  \n  // ATTEMPTING TO REPLACE WITH STORE\n  //const currentResult = store.searchResults\n  \n  if (currentResult?.name) {\n    \n    console.log(currentResult.name)\n    console.log(currentResult.genres)\n    // var jsonGenres = JSON.parse(currentResult.genres);\n    // for (var i = 0; i < jsonGenres.genres.length; i++) {\n    //     var genre = jsonGenres.genres[i];\n    //     console.log(genre);\n    // }\n    \n    const genres = currentResult.genres.map((genre, index) =>\n      <p key={index}> {genre} </p>\n    )\n    \n    const image_url = currentResult.images[0].url\n    \n    // const images = currentResult.images.map((image, index) =>\n    //   <p key={index}> {image} </p>\n    // )\n    \n    return (\n      <div>\n        <p>Artist Name: {currentResult.name}</p>\n        <p>Followers: {currentResult.followers}</p>\n        {genres}\n        <img src={image_url} />\n      </div>\n\n      )\n  } else {\n    return(\n      <p>No artist entered.</p>\n    )\n  }\n}\n\n\nfunction Analyze() {\n  const [currentSearch, setSearch] = useState('');\n  \n  // IS NOT CURRENTLY USED -> HANDLE CHANGE IS, CAN I CHANGE THAT?\n  useEffect(() => {\n    // function handleChange(e) {\n    //   const search = e.target.value\n    //   setSearch(search)\n    // }\n    console.log(currentSearch)\n    //fetchArtist()\n  }, []);\n  \n  const [currentResult, setResult] = useState(null);\n  \n  \n  // WORKS!!!\n  const fetchArtist = () => {\n    fetch('/api/analyze?artist='+currentSearch)\n      .then(res => res.json())\n      .then(data => {\n      setResult({\n        name: data.name,\n        followers: data.followers,\n        genres: data.genres,\n        images: data.images,\n      });\n      })\n  }\n  \n  // ATTEMPTING TO REPLACE WITH STORE...\n  // const fetchArtist = () => {\n  //   fetch('/api/analyze?artist='+currentSearch)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //     store.searchResults = data;\n  //     })\n  // }\n\n\n  \n  // function handleSubmit(search) {\n  //   if (search !== '') {\n  //     fetchArtist()\n  //   }\n  // }\n  \n  // function handleChange(e) {\n  //   const search = e.target.value\n  //   setSearch(search)\n  //   //setSearch(search, handleSubmit(search))\n  //\n  // }\n\n  return (\n    <div id=\"analyze\" className=\"page-body\">\n      <span className=\"search-span\">\n        <input type=\"search\"\n               className=\"search-box\"\n               id=\"artist-search\"\n               src={\"search_icon\"}\n               placeholder=\"Search Artist\"\n               autoComplete=\"off\"\n               spellCheck=\"false\"\n               onChange={setSearch(e.target.value)}\n        />\n      </span>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n      <Artist currentResult={currentResult} />\n    </div>\n  );\n};\n\n\nexport default Analyze;"]},"metadata":{},"sourceType":"module"}