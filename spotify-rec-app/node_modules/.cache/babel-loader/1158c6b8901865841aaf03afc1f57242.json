{"ast":null,"code":"import deepEqual from 'fast-deep-equal';\nimport isDocumentVisible from './libs/is-document-visible';\nimport Cache from './cache'; // cache\n\nvar cache = new Cache(); // error retry\n\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n  if (!isDocumentVisible()) {\n    // if it's hidden, stop\n    // it will auto revalidate when focus\n    return;\n  }\n\n  if (typeof config.errorRetryCount === 'number' && opts.retryCount > config.errorRetryCount) {\n    return;\n  } // exponential backoff\n\n\n  var count = Math.min(opts.retryCount || 0, 8);\n  var timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n  setTimeout(revalidate, timeout, opts);\n} // client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\n\n\nvar slowConnection = typeof window !== 'undefined' && navigator['connection'] && ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1; // config\n\nvar defaultConfig = {\n  // events\n  onLoadingSlow: function () {},\n  onSuccess: function () {},\n  onError: function () {},\n  onErrorRetry: onErrorRetry,\n  errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n  focusThrottleInterval: 5 * 1000,\n  dedupingInterval: 2 * 1000,\n  loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n  refreshInterval: 0,\n  revalidateOnFocus: true,\n  revalidateOnReconnect: true,\n  refreshWhenHidden: false,\n  refreshWhenOffline: false,\n  shouldRetryOnError: true,\n  suspense: false,\n  compare: deepEqual\n};\nexport { cache };\nexport default defaultConfig;","map":{"version":3,"sources":["/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/node_modules/swr/esm/config.js"],"names":["deepEqual","isDocumentVisible","Cache","cache","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","slowConnection","window","navigator","indexOf","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,IAAIC,KAAK,GAAG,IAAID,KAAJ,EAAZ,C,CACA;;AACA,SAASE,YAAT,CAAsBC,CAAtB,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqCC,UAArC,EAAiDC,IAAjD,EAAuD;AACnD,MAAI,CAACR,iBAAiB,EAAtB,EAA0B;AACtB;AACA;AACA;AACH;;AACD,MAAI,OAAOM,MAAM,CAACG,eAAd,KAAkC,QAAlC,IACAD,IAAI,CAACE,UAAL,GAAkBJ,MAAM,CAACG,eAD7B,EAC8C;AAC1C;AACH,GATkD,CAUnD;;;AACA,MAAIE,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,CAACE,UAAL,IAAmB,CAA5B,EAA+B,CAA/B,CAAZ;AACA,MAAII,OAAO,GAAG,CAAC,EAAE,CAACF,IAAI,CAACG,MAAL,KAAgB,GAAjB,KAAyB,KAAKJ,KAA9B,CAAF,CAAD,GAA2CL,MAAM,CAACU,kBAAhE;AACAC,EAAAA,UAAU,CAACV,UAAD,EAAaO,OAAb,EAAsBN,IAAtB,CAAV;AACH,C,CACD;AACA;AACA;;;AACA,IAAIU,cAAc,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IACjBC,SAAS,CAAC,YAAD,CADQ,IAEjB,CAAC,SAAD,EAAY,IAAZ,EAAkBC,OAAlB,CAA0BD,SAAS,CAAC,YAAD,CAAT,CAAwBE,aAAlD,MAAqE,CAAC,CAF1E,C,CAGA;;AACA,IAAIC,aAAa,GAAG;AAChB;AACAC,EAAAA,aAAa,EAAE,YAAY,CAAG,CAFd;AAGhBC,EAAAA,SAAS,EAAE,YAAY,CAAG,CAHV;AAIhBC,EAAAA,OAAO,EAAE,YAAY,CAAG,CAJR;AAKhBvB,EAAAA,YAAY,EAAEA,YALE;AAMhBa,EAAAA,kBAAkB,EAAE,CAACE,cAAc,GAAG,EAAH,GAAQ,CAAvB,IAA4B,IANhC;AAOhBS,EAAAA,qBAAqB,EAAE,IAAI,IAPX;AAQhBC,EAAAA,gBAAgB,EAAE,IAAI,IARN;AAShBC,EAAAA,cAAc,EAAE,CAACX,cAAc,GAAG,CAAH,GAAO,CAAtB,IAA2B,IAT3B;AAUhBY,EAAAA,eAAe,EAAE,CAVD;AAWhBC,EAAAA,iBAAiB,EAAE,IAXH;AAYhBC,EAAAA,qBAAqB,EAAE,IAZP;AAahBC,EAAAA,iBAAiB,EAAE,KAbH;AAchBC,EAAAA,kBAAkB,EAAE,KAdJ;AAehBC,EAAAA,kBAAkB,EAAE,IAfJ;AAgBhBC,EAAAA,QAAQ,EAAE,KAhBM;AAiBhBC,EAAAA,OAAO,EAAEtC;AAjBO,CAApB;AAmBA,SAASG,KAAT;AACA,eAAeqB,aAAf","sourcesContent":["import deepEqual from 'fast-deep-equal';\nimport isDocumentVisible from './libs/is-document-visible';\nimport Cache from './cache';\n// cache\nvar cache = new Cache();\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (typeof config.errorRetryCount === 'number' &&\n        opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    var count = Math.min(opts.retryCount || 0, 8);\n    var timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nvar slowConnection = typeof window !== 'undefined' &&\n    navigator['connection'] &&\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nvar defaultConfig = {\n    // events\n    onLoadingSlow: function () { },\n    onSuccess: function () { },\n    onError: function () { },\n    onErrorRetry: onErrorRetry,\n    errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n    refreshInterval: 0,\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    shouldRetryOnError: true,\n    suspense: false,\n    compare: deepEqual\n};\nexport { cache };\nexport default defaultConfig;\n"]},"metadata":{},"sourceType":"module"}