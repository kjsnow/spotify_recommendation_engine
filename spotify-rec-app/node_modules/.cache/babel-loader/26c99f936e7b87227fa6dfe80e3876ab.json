{"ast":null,"code":"// reducer.js\nimport { REQUEST_SUCCESSFUL, REQUEST_STARTED, REQUEST_FAILED } from \"./constants\"; // a reducer receives the current state, and an action\n\nexport const reducer = (state, action) => {\n  // we check the type of each action and return an updated state object accordingly\n  switch (action.type) {\n    case REQUEST_STARTED:\n      return { ...state,\n        isLoading: true\n      };\n\n    case REQUEST_SUCCESSFUL:\n      return { ...state,\n        isLoading: false,\n        error: null,\n        data: action.data\n      };\n\n    case REQUEST_FAILED:\n      return { ...state,\n        isLoading: false,\n        error: action.error\n      };\n    // usually I ignore the action if its `type` is not matched here, some people prefer throwing errors here - it's really up to you.\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/src/reducer.js"],"names":["REQUEST_SUCCESSFUL","REQUEST_STARTED","REQUEST_FAILED","reducer","state","action","type","isLoading","error","data"],"mappings":"AAAA;AACA,SACEA,kBADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,aAJP,C,CAMA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKP,kBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,IAAI,EAAEJ,MAAM,CAACI;AAJR,OAAP;;AAMF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAHT,OAAP;AAMF;;AACA;AACE,aAAOJ,KAAP;AAtBJ;AAwBD,CA1BM","sourcesContent":["// reducer.js\nimport {\n  REQUEST_SUCCESSFUL,\n  REQUEST_STARTED,\n  REQUEST_FAILED }\n  from \"./constants\";\n\n// a reducer receives the current state, and an action\nexport const reducer = (state, action) => {\n  // we check the type of each action and return an updated state object accordingly\n  switch (action.type) {\n    case REQUEST_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case REQUEST_SUCCESSFUL:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        data: action.data,\n      };\n    case REQUEST_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n      };\n\n    // usually I ignore the action if its `type` is not matched here, some people prefer throwing errors here - it's really up to you.\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}