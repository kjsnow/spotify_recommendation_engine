{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\n\nvar _some = _interopRequireDefault(require(\"lodash/some\"));\n\nvar _mergeWith = _interopRequireDefault(require(\"lodash/mergeWith\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isUndefined = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _defaults = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst configUtils = {\n  negative(scale) {\n    return Object.keys(scale).filter(key => scale[key] !== '0').reduce((negativeScale, key) => ({ ...negativeScale,\n      [`-${key}`]: (0, _negateValue.default)(scale[key])\n    }), {});\n  },\n\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === 'string').reduce((breakpoints, key) => ({ ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n\n};\n\nfunction value(valueToResolve, ...args) {\n  return (0, _isFunction.default)(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\n\nfunction mergeThemes(themes) {\n  const theme = (({\n    extend: _,\n    ...t\n  }) => t)(themes.reduce((merged, t) => {\n    return (0, _defaults.default)(merged, t);\n  }, {}));\n\n  return { ...theme,\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: themes.reduce((merged, {\n      extend\n    }) => {\n      return (0, _mergeWith.default)(merged, extend, (mergedValue, extendValue) => {\n        if ((0, _isUndefined.default)(mergedValue)) {\n          return [extendValue];\n        }\n\n        if (Array.isArray(mergedValue)) {\n          return [extendValue, ...mergedValue];\n        }\n\n        return [extendValue, mergedValue];\n      });\n    }, {})\n  };\n}\n\nfunction mergeExtensions({\n  extend,\n  ...theme\n}) {\n  return (0, _mergeWith.default)(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!(0, _isFunction.default)(themeValue) && !(0, _some.default)(extensions, _isFunction.default)) {\n      return { ...themeValue,\n        ...Object.assign({}, ...extensions)\n      };\n    }\n\n    return (resolveThemePath, utils) => ({ ...value(themeValue, resolveThemePath, utils),\n      ...Object.assign({}, ...extensions.map(e => value(e, resolveThemePath, utils)))\n    });\n  });\n}\n\nfunction resolveFunctionKeys(object) {\n  const resolveThemePath = (key, defaultValue) => {\n    const path = (0, _toPath.default)(key);\n    let index = 0;\n    let val = object;\n\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = (0, _isFunction.default)(val) ? val(resolveThemePath, configUtils) : val;\n    }\n\n    return val === undefined ? defaultValue : val;\n  };\n\n  return Object.keys(object).reduce((resolved, key) => {\n    return { ...resolved,\n      [key]: (0, _isFunction.default)(object[key]) ? object[key](resolveThemePath, configUtils) : object[key]\n    };\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    const plugins = (0, _get.default)(config, 'plugins', []);\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(0, _get.default)(plugin, 'config', {})])];\n    });\n  });\n  return allConfigs;\n}\n\nfunction resolveConfig(configs) {\n  const allConfigs = extractPluginConfigs(configs);\n  return (0, _defaults.default)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes((0, _map.default)(allConfigs, t => (0, _get.default)(t, 'theme', {}))))),\n    variants: (firstVariants => {\n      return Array.isArray(firstVariants) ? firstVariants : (0, _defaults.default)({}, ...(0, _map.default)(allConfigs, 'variants'));\n    })((0, _defaults.default)({}, ...(0, _map.default)(allConfigs)).variants)\n  }, ...allConfigs);\n}","map":{"version":3,"sources":["/Users/kyle.snow/repos/spotify_recommendation_engine/spotify-rec-app/node_modules/tailwindcss/lib/util/resolveConfig.js"],"names":["Object","defineProperty","exports","value","default","resolveConfig","_some","_interopRequireDefault","require","_mergeWith","_isFunction","_isUndefined","_defaults","_map","_get","_toPath","_negateValue","obj","__esModule","configUtils","negative","scale","keys","filter","key","reduce","negativeScale","breakpoints","screens","valueToResolve","args","mergeThemes","themes","theme","extend","_","t","merged","mergedValue","extendValue","Array","isArray","mergeExtensions","themeValue","extensions","assign","resolveThemePath","utils","map","e","resolveFunctionKeys","object","defaultValue","path","index","val","undefined","length","resolved","extractPluginConfigs","configs","allConfigs","forEach","config","plugins","plugin","__isOptionsFunction","variants","firstVariants"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\n\nvar _some = _interopRequireDefault(require(\"lodash/some\"));\n\nvar _mergeWith = _interopRequireDefault(require(\"lodash/mergeWith\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isUndefined = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _defaults = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst configUtils = {\n  negative(scale) {\n    return Object.keys(scale).filter(key => scale[key] !== '0').reduce((negativeScale, key) => ({ ...negativeScale,\n      [`-${key}`]: (0, _negateValue.default)(scale[key])\n    }), {});\n  },\n\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === 'string').reduce((breakpoints, key) => ({ ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n\n};\n\nfunction value(valueToResolve, ...args) {\n  return (0, _isFunction.default)(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\n\nfunction mergeThemes(themes) {\n  const theme = (({\n    extend: _,\n    ...t\n  }) => t)(themes.reduce((merged, t) => {\n    return (0, _defaults.default)(merged, t);\n  }, {}));\n\n  return { ...theme,\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: themes.reduce((merged, {\n      extend\n    }) => {\n      return (0, _mergeWith.default)(merged, extend, (mergedValue, extendValue) => {\n        if ((0, _isUndefined.default)(mergedValue)) {\n          return [extendValue];\n        }\n\n        if (Array.isArray(mergedValue)) {\n          return [extendValue, ...mergedValue];\n        }\n\n        return [extendValue, mergedValue];\n      });\n    }, {})\n  };\n}\n\nfunction mergeExtensions({\n  extend,\n  ...theme\n}) {\n  return (0, _mergeWith.default)(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!(0, _isFunction.default)(themeValue) && !(0, _some.default)(extensions, _isFunction.default)) {\n      return { ...themeValue,\n        ...Object.assign({}, ...extensions)\n      };\n    }\n\n    return (resolveThemePath, utils) => ({ ...value(themeValue, resolveThemePath, utils),\n      ...Object.assign({}, ...extensions.map(e => value(e, resolveThemePath, utils)))\n    });\n  });\n}\n\nfunction resolveFunctionKeys(object) {\n  const resolveThemePath = (key, defaultValue) => {\n    const path = (0, _toPath.default)(key);\n    let index = 0;\n    let val = object;\n\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = (0, _isFunction.default)(val) ? val(resolveThemePath, configUtils) : val;\n    }\n\n    return val === undefined ? defaultValue : val;\n  };\n\n  return Object.keys(object).reduce((resolved, key) => {\n    return { ...resolved,\n      [key]: (0, _isFunction.default)(object[key]) ? object[key](resolveThemePath, configUtils) : object[key]\n    };\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    const plugins = (0, _get.default)(config, 'plugins', []);\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(0, _get.default)(plugin, 'config', {})])];\n    });\n  });\n  return allConfigs;\n}\n\nfunction resolveConfig(configs) {\n  const allConfigs = extractPluginConfigs(configs);\n  return (0, _defaults.default)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes((0, _map.default)(allConfigs, t => (0, _get.default)(t, 'theme', {}))))),\n    variants: (firstVariants => {\n      return Array.isArray(firstVariants) ? firstVariants : (0, _defaults.default)({}, ...(0, _map.default)(allConfigs, 'variants'));\n    })((0, _defaults.default)({}, ...(0, _map.default)(allConfigs)).variants)\n  }, ...allConfigs);\n}"]},"metadata":{},"sourceType":"script"}